%% @doc Configures whether or not VerneMQ will use cluster discovery.
{mapping, "vmq_discovery.discovery_enabled", "vmq_discovery.discovery_enabled", [
    {default, off},
    {datatype, flag}
]}.

%% Cluster formation maximum startup delay
{mapping, "vmq_discovery.max_startup_delay", "vmq_discovery.max_startup_delay", [
    {datatype, integer}
]}.

%% @doc Set the time in seconds to remove missing nodes from the cluster
{mapping, "vmq_discovery.autoclean_interval", "vmq_discovery.autoclean_interval", [
    {default, 20},
    {commented, 20},
    {datatype, integer}
]}.


%% @doc Node discovery backend used for automatic cluster formation.
{mapping, "vmq_discovery.discovery_backend", "vmq_discovery.discovery_backend", [
    {datatype, atom}
]}.

{translation, "vmq_discovery.discovery_backend",
fun(Conf) ->
    case cuttlefish:conf_get("vmq_discovery.discovery_backend", Conf, manual) of
        manual         -> backend_manual;
        dns            -> backend_dns;
        aws            -> backend_aws;
        kubernetes     -> backend_k8s;
        Other         -> Other
    end
end}.

%%--------------------------------------------------------------------
%% Cluster using a list of nodes
%%--------------------------------------------------------------------

%% @doc Manual configuration cluster discovery backend.
%% Clustering happens automatically at startup by joining
%% a list of predefined nodes.
{mapping, "vmq_discovery.manual.nodes.$name", "vmq_discovery.cluster_nodes", [
    {datatype, string},
    {commented, "VerneMQ@127.0.0.1"},
    {include_default, "node1"}
]}.

{translation, "vmq_discovery.cluster_nodes",
fun(Conf) ->
    Prefix = "vmq_discovery.manual.nodes",
    Nodes = [V || {_, V} <- cuttlefish_variable:filter_by_prefix(Prefix, Conf)],
    case Nodes of
        [] -> cuttlefish:unset();
        SomethingElse -> SomethingElse.
    end
end}.


%%--------------------------------------------------------------------
%% Cluster using Kubernetes
%%--------------------------------------------------------------------

%% @doc The Kubernetes master node url(API url).
{mapping, "vmq_discovery.k8s.master_node_url", "vmq_discovery.discovery_config.k8s.master_node_url", [
    {commented, "https://kubernetes.default.svc.cluster.local:443"}
    {default, "https://kubernetes.default.svc.cluster.local:443"}
    {datatype, string}
]}.


%% @doc Path to the Kubernetes service namespace.
{mapping, "vmq_discovery.k8s.service_namespace", "vmq_discovery.discovery_config.k8s.service_namespace", [
    {default, "/var/run/secrets/kubernetes.io/serviceaccount/namespace"},
    {commented, "/var/run/secrets/kubernetes.io/serviceaccount/namespace"},
    {datatype, file},
]}.

%% @doc Path to the Kubernetes service namespace.
{mapping, "vmq_discovery.k8s.service_name", "vmq_discovery.discovery_config.k8s.service_name", [
    {default, "vernemq"},
    {commented, "vernemq"},
    {datatype, string}
]}.

{mapping, "mq_discovery.k8s.token_path", "mq_discovery.discovery_config.k8s.token_path",
 [{datatype, file},
  {commented, "/var/run/secrets/kubernetes.io/serviceaccount/token"}
  {default, "/var/run/secrets/kubernetes.io/serviceaccount/token"},
]}.

{mapping, "mq_discovery.k8s.certificate_path", "mq_discovery.discovery_config.k8s.certificate_path",
 [{datatype, file},
  {commented, "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"}
  {default, "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"},
]}.

%% @doc Defines the address type used by the node. Can be an ip or dns hostname.
{mapping, "vmq_discovery.k8s.address_type", "vmq_discovery.discovery_config.k8s.address_type", [
    {default, hostname},
    {commented, hostname},
    {datatype, {enum, [hostname, ip]}}
]}.
